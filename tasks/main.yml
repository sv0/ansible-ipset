---
# - name: Reload systemd
#   ansible.builtin.systemd:
#     daemon_reload: true

- name: Set ipset_countries fact
  set_fact:
    ipset_countries: "{{ host_vars['ipset_countries'] | default(ipset_countries) }}"

# - name: Debug ipset_countries
#   debug:
#     var: ipset_countries
#     verbosity: 1

- name: "Create directory {{ ipset_config_file | dirname }}"
  file:
    path: "{{ ipset_config_file | dirname }}"
    state: directory
    mode: 0755

- name: Create cache directory in the inventory
  ansible.builtin.file:
    path: "{{ inventory_dir }}/.cache"
    state: directory
    mode: 0755
  delegate_to: localhost

- name: Update repository cache
  ansible.builtin.apt:
    update_cache: true
    cache_valid_time: 60  # 86400

- name: Install required packages
  package:
    name:
      - ipset
      - iptables

- name: Debug
  debug:
    var: ansible_service_mgr

- name: Include country tasks
  include_tasks: country.yml
  with_items: "{{ ipset_countries }}"
  # when:
  #   # - ipset_countries is defined
  #   - "host_vars.get('ipset_countries', [])"
  #     # - (ipset_countries)
  tags:
    - country

# - name: Debug ipset_country
#   debug:
#     var: ipset_country

- name: "Create ipset rules {{ ipset_config_file }}"
  template:
    src: ipset.j2
    dest: "{{ ipset_config_file }}"
    mode: 0644

# - name: restore ipset rules {{ ipset_config_file }}
#   shell: ipset restore -exist < {{ ipset_config_file }}
#   changed_when: ipset_clear

- name: Create ipset systemd service
  template:
    src: ipset.service.j2
    dest: /etc/systemd/system/ipset.service
    mode: 0644
  notify:
    - Reload ipset
  when: ansible_service_mgr == "systemd"
  tags:
    - notest
    - molecule-notest

- name: Enable ipset systemd service
  service:
    name: ipset
    enabled: true
    state: restarted
    daemon_reload: true
  when: ansible_service_mgr == "systemd"
  tags:
    - notest
    - molecule-notest
